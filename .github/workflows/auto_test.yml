name: Run pytest
on: 
    workflow_dispatch:
    repository_dispatch:
        types:
        - pytest
    workflow_call:
    push:
        branches:
        - develop

jobs:
  pytest:
    strategy:
      matrix:
        python-version: [3.9, '3.10', 3.11]
    permissions: write-all

    runs-on: ubuntu-latest

    steps:
      # リポジトリをチェックアウト
      - name: Checkout
        uses: actions/checkout@v2

      # Pythonの環境をセットアップ
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # pytestをインストール
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt

      # pytest -> JUnit xml形式で結果を出力
      - name: PyTest
        run: |
          set -o pipefail
          export PYTHONPATH=./repos/
          pytest tests --junit-xml results/pytest.xml --disable-warnings --cov=repos/ --cov-report=term-missing:skip-covered | tee pytest-coverage.txt
        continue-on-error: true

      # テスト結果の表示
      # - name: Upload Unit Test Results
      #   if: ${{ always() }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Unit Test Results (Python ${{ matrix.python-version }})
      #     path: results/*.xml

      # - name: Download Artifacts
      #   if: success() || failure()
      #   uses: actions/download-artifact@v2
      #   with:
      #     path: artifacts

      # - name: Publish Unit Test Results
      #   uses: EnricoMi/publish-unit-test-result-action@v2
      #   with:
      #     junit_files: artifacts/**/*.xml

      - name: Print Name
        run: |
          echo "This is Python ${{ matrix.python-version }} summary!" >> $GITHUB_STEP_SUMMARY
      
      - name: Pytest coverage comment
        # if: ${{ steps.is_main.outputs.flag == '1' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./results/pytest.xml

      - name: Create Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.3.0
        with:
          auth: ${{ secrets.BADGE_GIST }}
          gistID: e31fc348a9dea0098de9540dc5961668
          filename: pytest-coverage-comment.json
          label: Coverage
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
          namedLogo: python
