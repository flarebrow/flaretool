name: Update Tag Prod
on:
  workflow_dispatch:
  workflow_call:
jobs:
  release:
    name: Update Tag Prod
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      - name: git pull
        run: |
          git pull
      - name: Get previous tag
        id: pre_tag
        run: |
          echo "::set-output name=pre_tag::$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"
      - name: Generate release tag
        id: release_tag
        run: |
          TAG=$(cat repos/flaretool/VERSION.py | grep -oP '(?<=VERSION = ").*(?=")')
          echo "::set-output name=release_tag::v$TAG"
      - name: Generate release note
        id: release_note
        run: |
          echo "::set-output name=release_note::$(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d '{"tag_name":"${{ steps.release_tag.outputs.release_tag }}", "previous_tag_name":"${{ steps.pre_tag.outputs.pre_tag }}"}' | jq .body | sed 's/"//g')"
      - name: Create Release
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{ \"tag_name\": \"${{ steps.release_tag.outputs.release_tag }}\", \"name\": \"Release ${{ steps.release_tag.outputs.release_tag }}\", \"body\": \"https://pypi.org/project/flaretool/ \n\n ${{ steps.release_note.outputs.release_note }}\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases
